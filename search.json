[
  {
    "objectID": "analysis.html",
    "href": "analysis.html",
    "title": "Hacker News Analysis",
    "section": "",
    "text": "A project to analyze hacker news stories using nbdbt"
  },
  {
    "objectID": "analysis.html#analysis",
    "href": "analysis.html#analysis",
    "title": "Hacker News Analysis",
    "section": "Analysis",
    "text": "Analysis\n\nRaw HN Source\n\nThis is the raw data for all Hacker News posts\n\nIt is sourced from the Googleâ€™s Big Query Public Datases and accessible as\nbigquery-public-data.hacker_news.full\nIt seems to be updated on a regular basis (see timestamp of latest post).\n\n%%dbt -a raw_sources analyses/raw_hn_source.sql\nselect *\nfrom {{ source('public_datasets', 'full_stories') }}\norder by timestamp desc\n\n\ndf = raw_sources.ref(10); df.head()\n\n\n\n\n\n  \n    \n      \n      title\n      url\n      text\n      dead\n      by\n      score\n      time\n      timestamp\n      type\n      id\n      parent\n      descendants\n      ranking\n      deleted\n    \n  \n  \n    \n      0\n      None\n      None\n      Not sure where you got that from, but that&#x2...\n      None\n      seanhunter\n      NaN\n      1658567561\n      2022-07-23 09:12:41+00:00\n      comment\n      32201677\n      32199341\n      NaN\n      NaN\n      None\n    \n    \n      1\n      None\n      None\n      It&#x27;s a level of &quot;professionalism&quo...\n      None\n      foverzar\n      NaN\n      1658567556\n      2022-07-23 09:12:36+00:00\n      comment\n      32201676\n      32201587\n      NaN\n      NaN\n      None\n    \n    \n      2\n      None\n      None\n      <a href=\"https:&#x2F;&#x2F;github.com&#x2F;cyp...\n      None\n      DistrictFun7572\n      NaN\n      1658567547\n      2022-07-23 09:12:27+00:00\n      comment\n      32201675\n      32199828\n      NaN\n      NaN\n      None\n    \n    \n      3\n      None\n      None\n      Interesting, why isn&#x27;t the moisture on wa...\n      None\n      badpun\n      NaN\n      1658567537\n      2022-07-23 09:12:17+00:00\n      comment\n      32201674\n      32201620\n      NaN\n      NaN\n      None\n    \n    \n      4\n      None\n      None\n      Why are comments that are critical to the inve...\n      None\n      lizardactivist\n      NaN\n      1658567512\n      2022-07-23 09:11:52+00:00\n      comment\n      32201673\n      32200371\n      NaN\n      NaN\n      None\n    \n  \n\n\n\n\nThe column names have some descriptions, but might need to be standardized.\n\ndf.columns.values\n\narray(['title', 'url', 'text', 'dead', 'by', 'score', 'time', 'timestamp',\n       'type', 'id', 'parent', 'descendants', 'ranking', 'deleted'],\n      dtype=object)\n\n\n\n\nExploratory Data Analysis\n\nbased on a sample size of 10 latest posts\n\n\nCheck if time and timestamp contain the same info and one column can be eliminated\n\n\nfrom datetime import datetime\nimport pandas as pd\n\n\ndf['newtimestamp'] = pd.to_datetime(df['time'].astype(float), unit='s',origin='unix', utc=True)\n\n\ndf[df['newtimestamp'] == df['timestamp']].any(axis=None)\n\nTrue\n\n\nLooks like they are one and the same.\n\n\nEDA Questions\n\nCheck total record count\n\n\n%%dbt -a tot_rec analyses/count_hn_source.sql\nselect count(*) as rec_count \nfrom {{ source('public_datasets', 'full_stories') }}\n\n\ntot_rec_df = tot_rec.ref()\n\n\ntotal_records = tot_rec_df.iloc[0].rec_count\n\n\ntotal_records\n\n32201676\n\n\n\nCheck if any id, by, time, timestamp, type are null\n\n\n%%dbt -a null_field_counts analyses/null_field_counts.sql\nwith hn_posts\nas (\nselect\n     `by` as author,\n     * except(`by`)\nfrom {{ source('public_datasets', 'full_stories') }}\n)\nselect \n   'id' as field, \n    count(*) as null_count,\nfrom hn_posts\nwhere id is null\nunion all\nselect \n   'author' as field, \n    count(*) as null_count,\nfrom hn_posts\nwhere author is null\nunion all\nselect \n   'time' as field, \n    count(*) as null_count,\nfrom hn_posts\nwhere time is null\nunion all\nselect \n   'timestamp' as field, \n    count(*) as null_count,\nfrom hn_posts\nwhere timestamp is null\nunion all\nselect \n   'type' as field, \n    count(*) as null_count,\nfrom hn_posts\nwhere type is null\nunion all\nselect \n   'dead' as field, \n    count(*) as null_count,\nfrom hn_posts\nwhere dead is null\n\n\n\nnull_df = null_field_counts.ref()\n\n\nnull_df['pct'] = null_df['null_count']/total_records\n\n\nnull_df\n\n\n\n\n\n  \n    \n      \n      field\n      null_count\n      pct\n    \n  \n  \n    \n      0\n      id\n      0\n      0.000000\n    \n    \n      1\n      dead\n      30822943\n      0.957184\n    \n    \n      2\n      type\n      0\n      0.000000\n    \n    \n      3\n      time\n      26818\n      0.000833\n    \n    \n      4\n      timestamp\n      26818\n      0.000833\n    \n    \n      5\n      author\n      955051\n      0.029658\n    \n  \n\n\n\n\nSo type and ids all have values,\nbut there are entries with no time or timestamp (very small, less than 0.1 percent)\nand there are entries with no author (around 3 percent)\nand 96 percent have null values for the dead field.\n\nCheck for unique values of dead\n\n\n%%dbt -a dead_type_counts analyses/dead_types_counts.sql\nselect dead as dead_type, count(*) as dead_count\nfrom {{ source('public_datasets', 'full_stories') }}\ngroup by dead \norder by dead_count desc\n\n\ndead_types_df = dead_type_counts.ref()\ndead_types_df['pct'] = dead_types_df['dead_count']/total_records\n\n\ndead_types_df\n\n\n\n\n\n  \n    \n      \n      dead_type\n      dead_count\n      pct\n    \n  \n  \n    \n      0\n      None\n      30822943\n      0.957184\n    \n    \n      1\n      True\n      1378733\n      0.042816\n    \n  \n\n\n\n\n\nSample dead values\n\n\n%%dbt -a dead_rows analyses/dead_rows.sql\nselect * \nfrom {{ source('public_datasets','full_stories') }}\nwhere dead is not null\nlimit 10\n\n\ndead_rows_df = dead_rows.ref()\n\n\ndead_rows_df.head()\n\n\n\n\n\n  \n    \n      \n      title\n      url\n      text\n      dead\n      by\n      score\n      time\n      timestamp\n      type\n      id\n      parent\n      descendants\n      ranking\n      deleted\n    \n  \n  \n    \n      0\n      None\n      None\n      The square roots rule is very handy, and comes...\n      True\n      pfh\n      NaN\n      1453809675\n      2016-01-26 12:01:15+00:00\n      comment\n      10972974\n      10972482\n      NaN\n      NaN\n      None\n    \n    \n      1\n      None\n      None\n      All these things he listed (losing touch with ...\n      True\n      ithought\n      NaN\n      1487297280\n      2017-02-17 02:08:00+00:00\n      comment\n      13665377\n      13665032\n      NaN\n      NaN\n      None\n    \n    \n      2\n      None\n      None\n      Stop BSing us ALL previous climate disaster pr...\n      True\n      andred14\n      NaN\n      1634252135\n      2021-10-14 22:55:35+00:00\n      comment\n      28871313\n      28865033\n      NaN\n      NaN\n      None\n    \n    \n      3\n      None\n      None\n      We need a lot of customization in the output a...\n      True\n      Lower456\n      NaN\n      1520529475\n      2018-03-08 17:17:55+00:00\n      comment\n      16545848\n      16545574\n      NaN\n      NaN\n      None\n    \n    \n      4\n      None\n      None\n      The failing @nytimes.\n      True\n      monochromatic\n      NaN\n      1520529511\n      2018-03-08 17:18:31+00:00\n      comment\n      16545849\n      16545685\n      NaN\n      NaN\n      None\n    \n  \n\n\n\n\n\n%%dbt -a not_dead_rows analyses/not_dead_rows.sql\nselect * \nfrom {{ source('public_datasets','full_stories') }}\nwhere dead is null\nlimit 10\n\n\nnot_dead_rows_df = not_dead_rows.ref()\n\n\nnot_dead_rows_df.head()\n\n\n\n\n\n  \n    \n      \n      title\n      url\n      text\n      dead\n      by\n      score\n      time\n      timestamp\n      type\n      id\n      parent\n      descendants\n      ranking\n      deleted\n    \n  \n  \n    \n      0\n      None\n      None\n      Let&#x27;s say the string contains 100 0s and ...\n      None\n      dlubarov\n      NaN\n      1376497604\n      2013-08-14 16:26:44+00:00\n      comment\n      6212429\n      6211216\n      NaN\n      NaN\n      None\n    \n    \n      1\n      None\n      None\n      Eric Schmidt would feel right at home in priso...\n      None\n      logn\n      NaN\n      1376497595\n      2013-08-14 16:26:35+00:00\n      comment\n      6212428\n      6210198\n      NaN\n      NaN\n      None\n    \n    \n      2\n      None\n      None\n      What is the point of submitting a story behind...\n      None\n      Quequau\n      NaN\n      1420273930\n      2015-01-03 08:32:10+00:00\n      comment\n      8830251\n      8830214\n      NaN\n      NaN\n      None\n    \n    \n      3\n      None\n      None\n      But that can be the case for small hatchbacks ...\n      None\n      freehunter\n      NaN\n      1376497523\n      2013-08-14 16:25:23+00:00\n      comment\n      6212421\n      6212022\n      NaN\n      NaN\n      None\n    \n    \n      4\n      None\n      None\n      Just to be clear, the BSD license did not exis...\n      None\n      throwaway2048\n      NaN\n      1376497501\n      2013-08-14 16:25:01+00:00\n      comment\n      6212420\n      6212325\n      NaN\n      NaN\n      None\n    \n  \n\n\n\n\n\nCheck for unique values of type\n\n\n%%dbt -a type_counts analyses/types_counts.sql\nselect type as type, count(*) as type_count\nfrom {{ source('public_datasets', 'full_stories') }}\ngroup by type \norder by type_count desc\n\n\ntypes_df = type_counts.ref()\ntypes_df['pct'] = dead_types_df['dead_count']/total_records\n\n\ntypes_df\n\n\n\n\n\n  \n    \n      \n      type\n      type_count\n      pct\n    \n  \n  \n    \n      0\n      comment\n      27599990\n      0.957184\n    \n    \n      1\n      story\n      4570471\n      0.042816\n    \n    \n      2\n      job\n      15567\n      NaN\n    \n    \n      3\n      pollopt\n      13668\n      NaN\n    \n    \n      4\n      poll\n      1980\n      NaN"
  },
  {
    "objectID": "analysis.html#standardization",
    "href": "analysis.html#standardization",
    "title": "Hacker News Analysis",
    "section": "Standardization",
    "text": "Standardization\n\nStandardize column names and types so downstream transformations donâ€™t have to deal with that\n\n\nproject_dir = '../hn_whos_hiring'\nprofiles_dir = '~/.dbt'\n\n\nfrom fal import FalDbt\n\n\nfaldbt = FalDbt(project_dir,profiles_dir)\n\n\nsource = faldbt.sources[0]\n\n\nsource.schema\n\n\n\n\n\n  \n    \n      \n      table_catalog\n      table_schema\n      table_name\n      column_name\n      ordinal_position\n      is_nullable\n      data_type\n      is_generated\n      generation_expression\n      is_stored\n      is_hidden\n      is_updatable\n      is_system_defined\n      is_partitioning_column\n      clustering_ordinal_position\n      collation_name\n    \n  \n  \n    \n      0\n      bigquery-public-data\n      hacker_news\n      full\n      title\n      1\n      YES\n      STRING\n      NEVER\n      None\n      None\n      NO\n      None\n      NO\n      NO\n      NaN\n      NULL\n    \n    \n      1\n      bigquery-public-data\n      hacker_news\n      full\n      url\n      2\n      YES\n      STRING\n      NEVER\n      None\n      None\n      NO\n      None\n      NO\n      NO\n      NaN\n      NULL\n    \n    \n      2\n      bigquery-public-data\n      hacker_news\n      full\n      text\n      3\n      YES\n      STRING\n      NEVER\n      None\n      None\n      NO\n      None\n      NO\n      NO\n      NaN\n      NULL\n    \n    \n      3\n      bigquery-public-data\n      hacker_news\n      full\n      dead\n      4\n      YES\n      BOOL\n      NEVER\n      None\n      None\n      NO\n      None\n      NO\n      NO\n      NaN\n      NULL\n    \n    \n      4\n      bigquery-public-data\n      hacker_news\n      full\n      by\n      5\n      YES\n      STRING\n      NEVER\n      None\n      None\n      NO\n      None\n      NO\n      NO\n      NaN\n      NULL\n    \n    \n      5\n      bigquery-public-data\n      hacker_news\n      full\n      score\n      6\n      YES\n      INT64\n      NEVER\n      None\n      None\n      NO\n      None\n      NO\n      NO\n      NaN\n      NULL\n    \n    \n      6\n      bigquery-public-data\n      hacker_news\n      full\n      time\n      7\n      YES\n      INT64\n      NEVER\n      None\n      None\n      NO\n      None\n      NO\n      NO\n      NaN\n      NULL\n    \n    \n      7\n      bigquery-public-data\n      hacker_news\n      full\n      timestamp\n      8\n      YES\n      TIMESTAMP\n      NEVER\n      None\n      None\n      NO\n      None\n      NO\n      NO\n      NaN\n      NULL\n    \n    \n      8\n      bigquery-public-data\n      hacker_news\n      full\n      type\n      9\n      YES\n      STRING\n      NEVER\n      None\n      None\n      NO\n      None\n      NO\n      NO\n      NaN\n      NULL\n    \n    \n      9\n      bigquery-public-data\n      hacker_news\n      full\n      id\n      10\n      YES\n      INT64\n      NEVER\n      None\n      None\n      NO\n      None\n      NO\n      NO\n      NaN\n      NULL\n    \n    \n      10\n      bigquery-public-data\n      hacker_news\n      full\n      parent\n      11\n      YES\n      INT64\n      NEVER\n      None\n      None\n      NO\n      None\n      NO\n      NO\n      NaN\n      NULL\n    \n    \n      11\n      bigquery-public-data\n      hacker_news\n      full\n      descendants\n      12\n      YES\n      INT64\n      NEVER\n      None\n      None\n      NO\n      None\n      NO\n      NO\n      NaN\n      NULL\n    \n    \n      12\n      bigquery-public-data\n      hacker_news\n      full\n      ranking\n      13\n      YES\n      INT64\n      NEVER\n      None\n      None\n      NO\n      None\n      NO\n      NO\n      NaN\n      NULL\n    \n    \n      13\n      bigquery-public-data\n      hacker_news\n      full\n      deleted\n      14\n      YES\n      BOOL\n      NEVER\n      None\n      None\n      NO\n      None\n      NO\n      NO\n      NaN\n      NULL\n    \n  \n\n\n\n\n\n%%dbt -a hn_posts models/hn_posts.sql\nwith stories as (\n  select\n    * except (`by`),\n    `by` as submitter_id,\n  from {{ source('public_datasets', 'full_stories') }}\n),\nlatest_stories as (\n  select \n     id as post_id, \n     title,\n     url,\n     submitter_id,\n     text as content,\n     timestamp as submit_timestamp, -- no need for time since timestamp == time\n     ifnull(dead,false) as dead,  \n     score as post_score,\n     cast(parent as int64) as parent_id,\n     type as post_type,\n     ranking,\n     deleted,\n     descendants\n   from stories\n   order by submit_timestamp desc\n)\nselect *\nfrom latest_stories\n\n\nNotes on columns\n\npost_id = unique identifier\ntitle = title of the post (can be null if comment?)\nurl = link to story\nsubmitter_id - user id of submitter\ncontent - body of post\nsubmit_timestamp - date/time submitted\ndead - ? not sure, but only 4.28 percent are dead, rest are none or false\nscore - rating?\nparent_id - link to parent if response to article/comment?\ndescendants - ? count of descendants?\nranking - ?\ndeleted - ?\npost_type = â€˜storyâ€™,â€˜commentâ€™, â€˜jobâ€™,â€˜polloptâ€™, â€˜pollâ€™\n\n\n\nMore questions\n\nmeaning of dead\nwhat is ranking\nwhat is deleted\nis parent_id the link for a graph of article/comments/responses to comment?\nwhat is descendants\n\n\n\nRelated to whoâ€™s hiring\n\nhow to filter whoâ€™s hiring posts\ncreate a pipeline for text analysis\n\n\nmodel.schema\n\n\n\n\n\n  \n    \n      \n      table_catalog\n      table_schema\n      table_name\n      column_name\n      ordinal_position\n      is_nullable\n      data_type\n      is_generated\n      generation_expression\n      is_stored\n      is_hidden\n      is_updatable\n      is_system_defined\n      is_partitioning_column\n      clustering_ordinal_position\n      collation_name\n    \n  \n  \n    \n      0\n      hn-whos-hiring\n      00dev\n      hn_posts\n      post_id\n      1\n      YES\n      INT64\n      NEVER\n      None\n      None\n      NO\n      None\n      NO\n      NO\n      NaN\n      NULL\n    \n    \n      1\n      hn-whos-hiring\n      00dev\n      hn_posts\n      title\n      2\n      YES\n      STRING\n      NEVER\n      None\n      None\n      NO\n      None\n      NO\n      NO\n      NaN\n      NULL\n    \n    \n      2\n      hn-whos-hiring\n      00dev\n      hn_posts\n      url\n      3\n      YES\n      STRING\n      NEVER\n      None\n      None\n      NO\n      None\n      NO\n      NO\n      NaN\n      NULL\n    \n    \n      3\n      hn-whos-hiring\n      00dev\n      hn_posts\n      submitter_id\n      4\n      YES\n      STRING\n      NEVER\n      None\n      None\n      NO\n      None\n      NO\n      NO\n      NaN\n      NULL\n    \n    \n      4\n      hn-whos-hiring\n      00dev\n      hn_posts\n      content\n      5\n      YES\n      STRING\n      NEVER\n      None\n      None\n      NO\n      None\n      NO\n      NO\n      NaN\n      NULL\n    \n    \n      5\n      hn-whos-hiring\n      00dev\n      hn_posts\n      submit_timestamp\n      6\n      YES\n      TIMESTAMP\n      NEVER\n      None\n      None\n      NO\n      None\n      NO\n      NO\n      NaN\n      NULL\n    \n    \n      6\n      hn-whos-hiring\n      00dev\n      hn_posts\n      dead\n      7\n      YES\n      BOOL\n      NEVER\n      None\n      None\n      NO\n      None\n      NO\n      NO\n      NaN\n      NULL\n    \n    \n      7\n      hn-whos-hiring\n      00dev\n      hn_posts\n      post_score\n      8\n      YES\n      INT64\n      NEVER\n      None\n      None\n      NO\n      None\n      NO\n      NO\n      NaN\n      NULL\n    \n    \n      8\n      hn-whos-hiring\n      00dev\n      hn_posts\n      parent_id\n      9\n      YES\n      INT64\n      NEVER\n      None\n      None\n      NO\n      None\n      NO\n      NO\n      NaN\n      NULL\n    \n    \n      9\n      hn-whos-hiring\n      00dev\n      hn_posts\n      post_type\n      10\n      YES\n      STRING\n      NEVER\n      None\n      None\n      NO\n      None\n      NO\n      NO\n      NaN\n      NULL\n    \n    \n      10\n      hn-whos-hiring\n      00dev\n      hn_posts\n      ranking\n      11\n      YES\n      INT64\n      NEVER\n      None\n      None\n      NO\n      None\n      NO\n      NO\n      NaN\n      NULL\n    \n    \n      11\n      hn-whos-hiring\n      00dev\n      hn_posts\n      deleted\n      12\n      YES\n      BOOL\n      NEVER\n      None\n      None\n      NO\n      None\n      NO\n      NO\n      NaN\n      NULL\n    \n    \n      12\n      hn-whos-hiring\n      00dev\n      hn_posts\n      descendants\n      13\n      YES\n      INT64\n      NEVER\n      None\n      None\n      NO\n      None\n      NO\n      NO\n      NaN\n      NULL\n    \n  \n\n\n\n\n\nmodel = faldbt.list_models()[0]\n\n\n# %cd ../hn_whos_hiring\n# !dbt run -s models/hn_posts.sql\n# %cd ../notebooks\n\n/home/butch2/play/experiments/hn_whos_hiring/notebooks\n14:14:39  Running with dbt=1.1.1\n14:14:39  Found 1 model, 0 tests, 0 snapshots, 7 analyses, 191 macros, 0 operations, 0 seed files, 1 source, 0 exposures, 0 metrics\n14:14:39  \n14:14:41  Concurrency: 1 threads (target='dev')\n14:14:41  \n14:14:41  1 of 1 START view model 00dev.hn_posts ......................................... [RUN]\n14:14:43  1 of 1 OK created view model 00dev.hn_posts .................................... [OK in 1.72s]\n14:14:43  \n14:14:43  Finished running 1 view model in 3.55s.\n14:14:43  \n14:14:43  Completed successfully\n14:14:43  \n14:14:43  Done. PASS=1 WARN=0 ERROR=0 SKIP=0 TOTAL=1\n/home/butch2/play/experiments/hn_whos_hiring/notebooks"
  }
]